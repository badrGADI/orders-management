name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Lint frontend
        run: cd apps/frontend && pnpm run lint

      - name: Lint backend
        run: cd apps/backend && pnpm run lint

  build-frontend:
    runs-on: ubuntu-latest
    needs: lint
    if: success()

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build frontend
        run: cd apps/frontend && pnpm run build

  build-backend:
    runs-on: ubuntu-latest
    needs: lint
    if: success()

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build backend
        run: cd apps/backend && pnpm run build

  deploy:
    runs-on: ubuntu-latest
    needs: [build-frontend, build-backend]
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy frontend to Vercel
        working-directory: apps/frontend
        run: vercel --prod --confirm --token ${{ secrets.VERCEL_TOKEN }}
